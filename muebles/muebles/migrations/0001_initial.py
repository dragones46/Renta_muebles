# Generated by Django 5.1.7 on 2025-05-10 18:55

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actualizacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100)),
                ('contenido', models.TextField()),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now)),
                ('importante', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Actualizaciones',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pregunta', models.CharField(max_length=200)),
                ('respuesta', models.TextField()),
                ('categoria', models.CharField(choices=[('CUENTA', 'Cuenta de usuario'), ('PAGOS', 'Pagos y facturación'), ('ENTREGAS', 'Entregas y logística'), ('MUEBLES', 'Productos y muebles'), ('SISTEMA', 'Sistema y mantenimiento'), ('OTROS', 'Otros')], max_length=50)),
                ('votos', models.PositiveIntegerField(default=0)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pregunta frecuente',
                'verbose_name_plural': 'Preguntas frecuentes',
                'ordering': ['categoria', '-votos'],
            },
        ),
        migrations.CreateModel(
            name='Mueble',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('precio_diario', models.IntegerField(default=0)),
                ('imagen', models.ImageField(upload_to='muebles/')),
                ('descuento', models.IntegerField(default=0)),
                ('fecha_inicio_descuento', models.DateField(blank=True, null=True)),
                ('fecha_fin_descuento', models.DateField(blank=True, null=True)),
                ('comision', models.IntegerField(default=10, verbose_name='Comisión de propietario  (%)')),
            ],
        ),
        migrations.CreateModel(
            name='TipoProblema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True)),
                ('prioridad', models.IntegerField(default=3)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('direccion', models.CharField(max_length=200)),
                ('password', models.CharField(max_length=100)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('tipo_documento', models.CharField(choices=[('CC', 'Cédula de Ciudadanía'), ('NIT', 'NIT de Empresa')], default='CC', max_length=3)),
                ('numero_documento', models.CharField(blank=True, max_length=20, null=True)),
                ('rol', models.IntegerField(choices=[(1, 'Administrador'), (2, 'Proveedor'), (3, 'Cliente'), (4, 'Soporte Técnico')], default=3)),
                ('estado', models.IntegerField(choices=[(1, 'Activo'), (2, 'Bloqueado')], default=1)),
                ('tipo_persona', models.CharField(choices=[('natural', 'Persona Natural'), ('juridica', 'Persona Jurídica')], default='natural', max_length=10)),
                ('foto', models.ImageField(blank=True, default='usuarios/default.png', null=True, upload_to='usuarios/')),
                ('token_recuperar', models.CharField(blank=True, default='', max_length=254, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='usuario_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuario_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Carrito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('domicilio', models.CharField(blank=True, max_length=255, null=True)),
                ('servicio_instalacion', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='carrito', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ItemCarrito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=1)),
                ('dias', models.PositiveIntegerField(default=1)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('carrito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='muebles.carrito')),
                ('mueble', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='muebles.mueble')),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('completado', 'Completado'), ('cancelado', 'Cancelado')], default='pendiente', max_length=20)),
                ('total', models.IntegerField(default=0)),
                ('direccion_entrega', models.CharField(max_length=255)),
                ('costo_domicilio', models.IntegerField(default=0)),
                ('comision_total', models.IntegerField(default=0)),
                ('servicio_instalacion', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DetallePedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField()),
                ('precio_unitario', models.IntegerField(default=0)),
                ('subtotal', models.IntegerField(default=0)),
                ('comision', models.IntegerField(default=0)),
                ('ganancia_propietario', models.IntegerField(default=0)),
                ('mueble', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='muebles.mueble')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='muebles.pedido')),
            ],
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pregunta', models.TextField(max_length=500)),
                ('categoria', models.CharField(choices=[('CUENTA', 'Cuenta de usuario'), ('PAGOS', 'Pagos y facturación'), ('ENTREGAS', 'Entregas y logística'), ('MUEBLES', 'Productos y muebles'), ('SISTEMA', 'Sistema y mantenimiento'), ('OTROS', 'Otros')], default='CUENTA', max_length=50)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('respondida', 'Respondida'), ('publicada', 'Publicada en FAQ')], default='pendiente', max_length=20)),
                ('votos', models.IntegerField(default=0)),
                ('fecha_eliminacion', models.DateTimeField(blank=True, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta',
                'verbose_name_plural': 'Preguntas',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_empresa', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proveedor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['-fecha_registro'],
            },
        ),
        migrations.AddField(
            model_name='mueble',
            name='propietario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='muebles.proveedor'),
        ),
        migrations.CreateModel(
            name='Renta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('duracion_meses', models.IntegerField(default=0)),
                ('duracion_dias', models.IntegerField(default=0)),
                ('mueble', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='muebles.mueble')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReporteProblema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('estado', models.CharField(choices=[('abierto', 'Abierto'), ('en_progreso', 'En Progreso'), ('resuelto', 'Resuelto'), ('cerrado', 'Cerrado'), ('rechazado', 'Rechazado')], default='abierto', max_length=20)),
                ('fecha_reporte', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('url_relacionada', models.CharField(blank=True, max_length=255)),
                ('captura_pantalla', models.ImageField(blank=True, null=True, upload_to='capturas_problemas/')),
                ('usuario_asignado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='problemas_asignados', to=settings.AUTH_USER_MODEL)),
                ('usuario_reporte', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='problemas_reportados', to=settings.AUTH_USER_MODEL)),
                ('tipo_problema', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='muebles.tipoproblema')),
            ],
            options={
                'ordering': ['-fecha_reporte'],
            },
        ),
        migrations.CreateModel(
            name='RegistroCambio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campo', models.CharField(max_length=100)),
                ('valor_anterior', models.TextField()),
                ('valor_nuevo', models.TextField()),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('problema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cambios', to='muebles.reporteproblema')),
            ],
            options={
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='ComentarioProblema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.TextField()),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('es_solucion', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('problema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios', to='muebles.reporteproblema')),
            ],
            options={
                'ordering': ['fecha'],
            },
        ),
        migrations.CreateModel(
            name='Respuesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', models.TextField()),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('es_faq', models.BooleanField(default=False)),
                ('administrador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pregunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas', to='muebles.pregunta')),
            ],
            options={
                'ordering': ['fecha'],
            },
        ),
    ]
